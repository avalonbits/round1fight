version: "3.7"
services:
  db:
    image: postgres:15-alpine
    hostname: db
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: round1fight
    ports:
      - "5432:5432"
    expose:
      - "5432"
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "1024MB"
    volumes:
      - postgres-db:/var/lib/postgresql/data
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
      - ./storage/pg/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]

  api1:
    image: avalonbits/round1fight:main
    restart: always
    hostname: api1
    depends_on:
      - db
    expose:
      - "1323"
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "256MB"

  api2:
    image: avalonbits/round1fight:main
    restart: always
    hostname: api2
    depends_on:
      - db
    expose:
      - "1323"
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "256MB"

  nginx:
    image: nginx:1.25.1-alpine
    hostname: api
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "0.5GB"

volumes:
  postgres-db:

networks:
  default:
    driver: bridge
